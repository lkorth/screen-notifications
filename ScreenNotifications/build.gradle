import groovy.swing.SwingBuilder
apply plugin: 'com.android.application'


android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 19
        versionName "0.13.0"
    }

    signingConfigs {
        release {
            try {
                storeFile file(System.properties['KEYSTORE_PATH'])
                storePassword "PLACEHOLDER"
                keyAlias System.properties['KEYSTORE_EMAIL']
                keyPassword "PLACEHOLDER"
            }
            catch (ex) {
                println "You should define KEYSTORE_PATH and KEYSTORE_EMAIL in a gradle.properties file."
                //throw new InvalidUserDataException("You should define KEYSTORE_PATH and KEYSTORE_EMAIL in a gradle.properties file.")
            }

        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile 'com.lukekorth:ez-loaders:1.3'
    compile 'com.lukekorth:mailable_log:0.1.3'
    compile 'fr.nicolaspomepuy:discreetapprate:2.0.3@aar'
}

// see Tim Roes https://www.timroes.de/2014/01/19/using-password-prompts-with-gradle-build-files/
gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':ScreenNotifications:assembleRelease')) {
        if(android.signingConfigs.release.storePassword.size() <= 0) {
            def pass = ''
            if (System.console() == null) {
                new SwingBuilder().edt {
                    dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
                            title: 'Enter password', // Dialog title
                            alwaysOnTop: true, // pretty much what the name says
                            resizable: false, // Don't allow the user to resize the dialog
                            locationRelativeTo: null, // Place dialog in center of the screen
                            pack: true, // We need to pack the dialog (so it will take the size of it's children)
                            show: true // Let's show it
                    ) {
                        vbox { // Put everything below each other
                            label(text: "Please enter key passphrase:")
                            input = passwordField()
                            button(defaultButton: true, text: 'OK', actionPerformed: {
                                pass = input.password; // Set pass variable to value of input field
                                dispose(); // Close dialog
                            })
                        } // vbox end
                    } // dialog end
                } // edt end
            } else {
                pass = System.console().readPassword("\nPlease enter key passphrase: ")
            }

            if (pass.size() <= 0) {
                throw new InvalidUserDataException("You must enter a password to proceed.")
            }

            pass = new String(pass)
            android.signingConfigs.release.storePassword = pass
            android.signingConfigs.release.keyPassword = pass
        }
    }
}
